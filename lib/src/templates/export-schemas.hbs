import { makeApi, Zodios, type ZodiosOptions } from "@zodios/core";
{{> imports}}

{{#if types}}
{{#each types}}
{{{this}}};
{{/each}}
{{/if}}

{{#each schemas}}
export const {{@key}}{{#if (lookup ../circularTypeByName @key)}}: z.ZodType<{{@key}}>{{/if}} = {{{this}}};
{{#unless (lookup ../types @key)}}
export type {{@key}} = z.infer<typeof {{@key}}>;
{{/unless}}

{{/each}}
const endpoints = makeApi([
{{#each endpoints}}
	{{> endpoint}},
{{/each}}
]);

export const {{options.apiClientName}} = new Zodios({{#if options.baseUrl}}"{{options.baseUrl}}", {{/if}}endpoints);

export function createApiClient(baseUrl: string, options?: ZodiosOptions) {
    return new Zodios(baseUrl, endpoints, options);
}
