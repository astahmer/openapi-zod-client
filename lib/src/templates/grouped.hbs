import { makeApi, Zodios, type ZodiosOptions } from "@zodios/core";
{{> imports}}

{{#if types}}
{{#each types}}
{{{this}}}
{{/each}}
{{/if}}

{{#each schemas}}
const {{@key}}{{#if (lookup ../circularTypeByName @key)}}: z.ZodType<{{@key}}>{{/if}} = {{{this}}};
{{/each}}

{{#ifNotEmptyObj schemas}}
export const schemas = {
{{#each schemas}}
	{{@key}},
{{/each}}
};
{{/ifNotEmptyObj}}

{{#each endpointsGroups}}
const {{camel-case @key "endpoints"}} = makeApi([
{{#each this.endpoints}}
	{{> endpoint}},
{{/each}}
]);
{{/each}}

const endpoints = {
{{#each endpointsGroups}}
	"{{@key}}":  {{camel-case @key "endpoints"}},
{{/each}}
}

{{#each endpointsGroups}}
export const {{camel-case @key @root.options.apiClientName}} = new Zodios({{#if @root.options.baseUrl}}"{{@root.options.baseUrl}}", {{/if}}{{camel-case @key "endpoints"}});
{{/each}}

export function createApiClient(endpointGroup: keyof typeof endpoints, baseUrl: string, options?: ZodiosOptions) {
	return new Zodios(baseUrl, endpoints[endpointGroup], options)
}
